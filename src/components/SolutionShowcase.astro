---
// Astro wrapper component for AI in Practice Section
// Static structure with selective hydration for interactive cards
import type { Translations } from '@/lib/i18n';

export interface Props {
  class?: string;
  translations: Translations;
}

const { class: className, translations } = Astro.props;

// Import the interactive React component
import SolutionShowcaseCards from './solution-showcase-cards.tsx';
import { Button } from '@/components/ui/button';
---

<section 
  id="solution"
  class={`min-h-screen ai-practice-gradient text-white flex items-center justify-center relative overflow-hidden py-16 lg:py-24 ${className || ''}`}
>
  <!-- Neutral slate background -->
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_30%_40%,rgba(71,85,105,0.06),transparent_65%)]" />
  <div class="absolute inset-0 bg-[radial-gradient(circle_at_70%_60%,rgba(100,116,139,0.04),transparent_65%)]" />

  <!-- Static decorative SVG background -->
  <div class="absolute inset-0 opacity-5">
    <svg class="w-full h-full" viewBox="0 0 800 600">
      <defs>
        <linearGradient id="flowGradient" x1="0%" y1="0%" x2="100%" y2="100%">
          <stop offset="0%" stop-color="#10b981" />
          <stop offset="50%" stop-color="#3b82f6" />
          <stop offset="100%" stop-color="#a855f7" />
        </linearGradient>
      </defs>
      <path
        d="M100,100 Q200,150 300,100 T500,100"
        fill="none"
        stroke="url(#flowGradient)"
        stroke-width="0.5"
        opacity="0.3"
      />
      <path
        d="M100,200 Q250,250 400,200 T700,200"
        fill="none"
        stroke="url(#flowGradient)"
        stroke-width="0.5"
        opacity="0.3"
      />
      <path
        d="M50,300 Q200,350 350,300 T650,300"
        fill="none"
        stroke="url(#flowGradient)"
        stroke-width="0.5"
        opacity="0.3"
      />
    </svg>
  </div>

  <div class="relative z-10 max-w-7xl mx-auto px-6 lg:px-8">
    <div class="grid grid-cols-1 lg:grid-cols-5 gap-16 items-center"> <!-- 40/60 split - centered alignment -->
      <!-- Left column - Static Header content -->
      <div class="lg:col-span-2 space-y-8">
        <div class="header-content">
          <h2 class="text-3xl sm:text-4xl lg:text-5xl font-light mb-6 tracking-tight leading-tight text-left text-shadow-subtle">
            <span class="font-serif italic font-medium text-red-300">{translations.solution_showcase.headline}</span><span class="whitespace-nowrap" set:html={translations.solution_showcase.headline_suffix}></span>
          </h2>
          <p class="text-white/60 text-lg leading-relaxed text-shadow-subtle" set:html={translations.solution_showcase.description}>
          </p>
        </div>

        <!-- Static feature list -->
        <div class="space-y-3">
          {translations.solution_showcase.features.map((feature, index) => (
            <div class="flex items-center space-x-3">
              <div class="w-2 h-2 rounded-full bg-red-300"></div>
              <span class="text-white/70 text-sm text-shadow-subtle">{feature}</span>
            </div>
          ))}
        </div>

        <!-- Interactive button with hover-lift effect - desktop only -->
        <div class="hidden lg:block text-center lg:text-left">
          <a href="https://cal.com/chrispkobler/discovery" target="_blank" rel="noopener noreferrer" class="w-full lg:w-auto inline-block">
            <Button variant="primary" className="hover-lift animate-on-scroll w-full lg:w-auto">
              {translations.solution_showcase.cta_button}
            </Button>
          </a>
        </div>
      </div>

      <!-- Right column - Interactive solution cards (hydrated island) -->
      <div class="lg:col-span-3 flex items-center justify-center">
        <SolutionShowcaseCards translations={translations} client:visible />
      </div>
    </div>
    
    <!-- Mobile CTA button - shown after cards on mobile only -->
    <div class="lg:hidden text-center mt-8">
      <a href="https://cal.com/chrispkobler/discovery" target="_blank" rel="noopener noreferrer" class="w-full inline-block">
        <Button variant="primary" className="hover-lift animate-on-scroll w-full">
          {translations.solution_showcase.cta_button}
        </Button>
      </a>
    </div>
  </div>
</section>