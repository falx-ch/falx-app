---
// Multi-language index page
// German uses /src/pages/index.astro (no prefix)
// Other languages use this file with [lang] parameter

// Import utilities
import { loadTranslations, getLanguageFromPath, type SupportedLanguage } from '@/lib/i18n';

// Get language from URL parameter
export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } }
    // { params: { lang: 'fr' } }, // Ready for future
    // { params: { lang: 'it' } }, // Ready for future
  ];
}

const { lang } = Astro.params as { lang: SupportedLanguage };

// Load translations for this language
const translations = await loadTranslations(lang);

// Set up meta data
const meta = {
  title: translations.meta.title,
  description: translations.meta.description,
  lang: lang
};

// Layout and Component Imports
import BaseLayout from '../../layouts/BaseLayout.astro';
import ShaderBackground from '../../components/shader-background.tsx';
import Header from '../../components/header.tsx';
import HeroContent from '../../components/hero-content.tsx';
import ReportSection from '../../components/ReportSection.astro';
import ProblemIdentification from '../../components/ProblemIdentification.astro';
import SolutionShowcase from '../../components/SolutionShowcase.astro';
import ProductDemonstration from '../../components/ProductDemonstration.astro';
import FounderSection from '../../components/FounderSection.astro';
import CallToAction from '../../components/CallToAction.astro';
import SimpleFooter from '../../components/simple-footer.tsx';
import GlobalAnimations from '../../components/global-animations.tsx';
---

<BaseLayout title={meta.title} description={meta.description} lang={meta.lang}>
	<GlobalAnimations client:load />
	<ShaderBackground client:load>
		<Header client:load />
		<HeroContent client:load />
	</ShaderBackground>
	
	<ReportSection translations={translations} />
	
	<!-- Blur transition at section boundary -->
	<div class="h-8 -mt-4 -mb-4 relative z-10 pointer-events-none" style="backdrop-filter: blur(8px); mask: linear-gradient(to bottom, transparent 0%, black 50%, transparent 100%);"></div>
	
	<ProblemIdentification translations={translations} />
	
	<div class="h-8 -mt-4 -mb-4 relative z-10 pointer-events-none" style="backdrop-filter: blur(8px); mask: linear-gradient(to bottom, transparent 0%, black 50%, transparent 100%);"></div>
	
	<SolutionShowcase translations={translations} />
	
	<div class="h-8 -mt-4 -mb-4 relative z-10 pointer-events-none" style="backdrop-filter: blur(8px); mask: linear-gradient(to bottom, transparent 0%, black 50%, transparent 100%);"></div>
	
	<ProductDemonstration translations={translations} />
	
	<div class="h-8 -mt-4 -mb-4 relative z-10 pointer-events-none" style="backdrop-filter: blur(8px); mask: linear-gradient(to bottom, transparent 0%, black 50%, transparent 100%);"></div>
	
	<FounderSection translations={translations} />
	
	<div class="h-8 -mt-4 -mb-4 relative z-10 pointer-events-none" style="backdrop-filter: blur(8px); mask: linear-gradient(to bottom, transparent 0%, black 50%, transparent 100%);"></div>
	
	<CallToAction translations={translations} />
	
	<SimpleFooter client:idle />
</BaseLayout>

<!-- Make translations available to components -->
<script define:vars={{ translations, lang }}>
  // Make translations globally available for React components
  window.__TRANSLATIONS__ = translations;
  window.__CURRENT_LANG__ = lang;
</script>